def print_manual():
    print("MANUAL OF TYPESETTER\n")
    print("Typesetter is a tool that makes the TeX-to-Pdf procedure less pain.")
    print("To use Typesetter, users only need to write down all their desired")
    print("into a typesetting config file and then type a simple command to")
    print("typeset or to view resulted pdf.")
    print("\n")

    print("1. Setting-up typesetting config")
    print("================================")
    print("For each TeX project, at the first step, users create a config file")
    print("that control all Tex-to-Pdf procedure of this TeX project.")
    print("The following information should be specified in the config file:")
    print("  * The master file of the TeX project")
    print("  * The TeX engine such as pdflatex or xelatex")
    print("  * Options of the chosen TeX engine")
    print("  * Other tools to make bibliography or/and index")
    print("  * Options of these tools")
    print("Any prefererence in the config file is given in the same format:")
    print("  config_keyword = config_value")
    print("in which config_keyword is not case sensitve, config_value is case")
    print("sensitive except boolean value.")
    print("A template config file can be generated by Typesetter with the")
    print("following command:\n")
    print("  typesetter -d your_config_file.cfg\n")
    print("If your_config_file.cfg is not provided, the config file is going to")
    print("be exported to typeset.cfg.")
    print("Then users can modify the template config file to fit their demand.\n")

    print("1.1 The TeX master file")
    print("-----------------------")
    print("Config keyword: MASTER_FILE")
    print("Config value: the filename of the TeX file containning preamble.\n")

    print("1.2 The TeX engine")
    print("------------------")
    print("Config keyword: TEX_ENGINE")
    print("Config value: a TeX-to-Pdf engine such as pdflatex or xelatex.")
    print("              The pdflatex is default value.\n")

    print("1.3 Options of the TeX engine")
    print("-----------------------------")
    print("Since Typesetter support more than one TeX-to-Pdf engine, users has")
    print("to specify options of the in-use engine.\n")

    print("1.3.a Options of the pdflatex engine")
    print("....................................")
    print("Config keyword: PDFLATEX_DRAFTMODE")
    print("Config value: boolean values such as yes/no or true/false or")
    print("              enable/disable. The default value is NO.\n")
    print("Config keyword: PDFLATEX_FILE_LINE_ERROR")
    print("Config value: boolean values such as yes/no or true/false or")
    print("              enable/disable. The default value is YES.\n")
    print("Config keyword: PDFLATEX_HALT_ON_ERROR")
    print("Config value: boolean values such as yes/no or true/false or")
    print("              enable/disable. The default value is YES.\n")
    print("Config keyword: PDFLATEX_INTERACTION")
    print("Config value: one of the following mode:")
    print("                batchmode/nonstopmode/scrollmode/errorstopmode")
    print("              The default value is errorstopmode.\n")
    print("Config keyword: PDFLATEX_OUTPUT_DIRECTORY")
    print("Config value: the output directory for output files.")
    print("              The default value is ./ which means current directory\n")
    print("Config keyword: PDFLATEX_SHELL_ESCAPE")
    print("Config value: boolean values such as yes/no or true/false or")
    print("              enable/disable. The default value is YES.\n")

    print("1.3 The Pdf viewer")
    print("------------------")
    print("Config keyword: VIEWER_MAC")
    print("Config value: pdf viewer on macOS. The default value is preview.")
    print("Config keyword: VIEWER_LINUX")
    print("Config_value: pdf viewer on Linux. The default value is xdg-open")

    print("2. Running Typesetter")
    print("=====================")
    print("From command-line of the current TeX project, users can perform some")
    print("tasks with Typesetter.\n")
    print("a. Display help")
    print("  typesetter -h\n")
    print("b. Typeset a TeX file")
    print("  typesetter -t your_config_filename.cfg\n")
    print("c. Clean-up all nonessential files")
    print("  typesetter -c your_config_filename.cfg\n")
    print("d. Generate template of config file")
    print("  typesetter -d your_config_filename.cfg\n")
    print("e. Display manual")
    print("  typesetter -m\n")
    print("f. View resulted pdf file")
    print("  typsetter -o your_config_filename.cfg\n")
    print("In all case, if the your_config_filename.cfg is not given,")
    print("the default filename typeset.cfg will be used.\n")
